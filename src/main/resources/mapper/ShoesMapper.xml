<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.hncu.onlineShoes.domain.ShoesMapper">
  <resultMap id="BaseResultMap" type="net.hncu.onlineShoes.domain.Shoes">
    <id column="shoes_id" jdbcType="INTEGER" property="shoesId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="brand_id" jdbcType="INTEGER" property="brandId" />
    <result column="img_uuid" jdbcType="VARCHAR" property="imgUuid" />
    <result column="img_suffix" jdbcType="VARCHAR" property="imgSuffix" />
    <result column="online_time" jdbcType="VARCHAR" property="onlineTime" />
    <result column="in_price" jdbcType="DECIMAL" property="inPrice" />
    <result column="out_price" jdbcType="DECIMAL" property="outPrice" />
    <result column="ratio" jdbcType="DECIMAL" property="ratio" />
    <result column="stock_out" jdbcType="VARCHAR" property="stockOut" />
    <result column="name" jdbcType="VARCHAR" property="name" />
  </resultMap>
  <resultMap id="withBrandAndShoesSizeResultMap" type="net.hncu.onlineShoes.domain.Shoes">
    <id column="shoes_id" jdbcType="INTEGER" property="shoesId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="brand_id" jdbcType="INTEGER" property="brandId" />
    <result column="img_uuid" jdbcType="VARCHAR" property="imgUuid" />
    <result column="img_suffix" jdbcType="VARCHAR" property="imgSuffix" />
    <result column="online_time" jdbcType="VARCHAR" property="onlineTime" />
    <result column="in_price" jdbcType="DECIMAL" property="inPrice" />
    <result column="out_price" jdbcType="DECIMAL" property="outPrice" />
    <result column="ratio" jdbcType="DECIMAL" property="ratio" />
    <result column="stock_out" jdbcType="VARCHAR" property="stockOut" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <association property="brand" javaType="net.hncu.onlineShoes.domain.Brand">
    	<id column="brandId" property="brandid"/>
    	<result column="brandName" property="name"/>
    	<result column="description" property="description"/>
    </association>
    <collection property="shoesSizes" ofType="net.hncu.onlineShoes.domain.ShoesSize">
    	<id column="shoes_size_id" property="shoesSizeId"/>
    	<result column="shoes_id" property="shoesId"/>
    	<result column="value" property="value" />
    	<result column="amount" property="amount" />
    </collection>
  </resultMap>
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.like">
                  and ${criterion.condition} "%"#{criterion.value}"%"
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.like">
                  and ${criterion.condition} "%"#{criterion.value}"%"
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    shoes_id, user_id, brand_id, img_uuid, img_suffix, online_time, in_price, out_price, 
    ratio, stock_out, name
  </sql>
  <sql id="withShoesSizeAndBrand_Column_List">
  	s.shoes_id, s.user_id, s.brand_id, s.img_uuid, s.img_suffix, s.online_time, s.in_price, s.out_price, 
    s.ratio, s.stock_out, s.name, b.brandId, b.name as brandName, b.description, ss.shoes_size_id, ss.value, ss.amount
  </sql>
  <sql id="Shoes_Brand_ShoesSize">
  	shoes s LEFT JOIN brand b ON s.brand_id = b.brandId
	LEFT JOIN shoessize ss ON s.shoes_id = ss.shoes_id
  </sql>
  <!-- 带品牌和鞋码信息的条件查询 selectByExampleWithBrandAndShoesSize -->
  <select id="selectByExampleWithBrandAndShoesSize" parameterType="net.hncu.onlineShoes.domain.ShoesExample" resultMap="withBrandAndShoesSizeResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="withShoesSizeAndBrand_Column_List" />
   	FROM 
   	<include refid="Shoes_Brand_ShoesSize" />
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="net.hncu.onlineShoes.domain.ShoesExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from shoes
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <!-- 带品牌和鞋码信息的主键查询 -->
  <select id="selectByPrimaryKeyWithBrandAndShoesSize" parameterType="java.lang.Integer" resultMap="withBrandAndShoesSizeResultMap">
    select 
    <include refid="withShoesSizeAndBrand_Column_List" />
    from  <include refid="Shoes_Brand_ShoesSize" />
    where s.shoes_id = #{shoesId,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from shoes
    where shoes_id = #{shoesId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from shoes
    where shoes_id = #{shoesId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="net.hncu.onlineShoes.domain.ShoesExample">
    delete from shoes
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <!-- 返回自动增长id -->
  <insert id="insert" parameterType="net.hncu.onlineShoes.domain.Shoes" 
  		>
 	<selectKey resultType="java.lang.Integer" keyProperty="shoesId">
		SELECT LAST_INSERT_ID()
	</selectKey> 
    insert into shoes (user_id, brand_id, 
      img_uuid, img_suffix, online_time, 
      in_price, out_price, ratio, 
      stock_out, name)
    values (#{userId,jdbcType=INTEGER}, #{brandId,jdbcType=INTEGER}, 
      #{imgUuid,jdbcType=VARCHAR}, #{imgSuffix,jdbcType=VARCHAR}, #{onlineTime,jdbcType=VARCHAR}, 
      #{inPrice,jdbcType=DECIMAL}, #{outPrice,jdbcType=DECIMAL}, #{ratio,jdbcType=DECIMAL}, 
      #{stockOut,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR})
  </insert>
  <!-- 返回自动增长id -->
  <insert id="insertSelective" parameterType="net.hncu.onlineShoes.domain.Shoes">
  	<selectKey resultType="java.lang.Integer" keyProperty="shoesId">
		SELECT LAST_INSERT_ID()
	</selectKey>
    insert into shoes
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="shoesId != null">
        shoes_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="brandId != null">
        brand_id,
      </if>
      <if test="imgUuid != null">
        img_uuid,
      </if>
      <if test="imgSuffix != null">
        img_suffix,
      </if>
      <if test="onlineTime != null">
        online_time,
      </if>
      <if test="inPrice != null">
        in_price,
      </if>
      <if test="outPrice != null">
        out_price,
      </if>
      <if test="ratio != null">
        ratio,
      </if>
      <if test="stockOut != null">
        stock_out,
      </if>
      <if test="name != null">
        name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="shoesId != null">
        #{shoesId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="brandId != null">
        #{brandId,jdbcType=INTEGER},
      </if>
      <if test="imgUuid != null">
        #{imgUuid,jdbcType=VARCHAR},
      </if>
      <if test="imgSuffix != null">
        #{imgSuffix,jdbcType=VARCHAR},
      </if>
      <if test="onlineTime != null">
        #{onlineTime,jdbcType=VARCHAR},
      </if>
      <if test="inPrice != null">
        #{inPrice,jdbcType=DECIMAL},
      </if>
      <if test="outPrice != null">
        #{outPrice,jdbcType=DECIMAL},
      </if>
      <if test="ratio != null">
        #{ratio,jdbcType=DECIMAL},
      </if>
      <if test="stockOut != null">
        #{stockOut,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="net.hncu.onlineShoes.domain.ShoesExample" resultType="java.lang.Long">
    select count(*) from shoes
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update shoes
    <set>
      <if test="record.shoesId != null">
        shoes_id = #{record.shoesId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.brandId != null">
        brand_id = #{record.brandId,jdbcType=INTEGER},
      </if>
      <if test="record.imgUuid != null">
        img_uuid = #{record.imgUuid,jdbcType=VARCHAR},
      </if>
      <if test="record.imgSuffix != null">
        img_suffix = #{record.imgSuffix,jdbcType=VARCHAR},
      </if>
      <if test="record.onlineTime != null">
        online_time = #{record.onlineTime,jdbcType=VARCHAR},
      </if>
      <if test="record.inPrice != null">
        in_price = #{record.inPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.outPrice != null">
        out_price = #{record.outPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.ratio != null">
        ratio = #{record.ratio,jdbcType=DECIMAL},
      </if>
      <if test="record.stockOut != null">
        stock_out = #{record.stockOut,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update shoes
    set shoes_id = #{record.shoesId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      brand_id = #{record.brandId,jdbcType=INTEGER},
      img_uuid = #{record.imgUuid,jdbcType=VARCHAR},
      img_suffix = #{record.imgSuffix,jdbcType=VARCHAR},
      online_time = #{record.onlineTime,jdbcType=VARCHAR},
      in_price = #{record.inPrice,jdbcType=DECIMAL},
      out_price = #{record.outPrice,jdbcType=DECIMAL},
      ratio = #{record.ratio,jdbcType=DECIMAL},
      stock_out = #{record.stockOut,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="net.hncu.onlineShoes.domain.Shoes">
    update shoes
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="brandId != null">
        brand_id = #{brandId,jdbcType=INTEGER},
      </if>
      <if test="imgUuid != null">
        img_uuid = #{imgUuid,jdbcType=VARCHAR},
      </if>
      <if test="imgSuffix != null">
        img_suffix = #{imgSuffix,jdbcType=VARCHAR},
      </if>
      <if test="onlineTime != null">
        online_time = #{onlineTime,jdbcType=VARCHAR},
      </if>
      <if test="inPrice != null">
        in_price = #{inPrice,jdbcType=DECIMAL},
      </if>
      <if test="outPrice != null">
        out_price = #{outPrice,jdbcType=DECIMAL},
      </if>
      <if test="ratio != null">
        ratio = #{ratio,jdbcType=DECIMAL},
      </if>
      <if test="stockOut != null">
        stock_out = #{stockOut,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
    </set>
    where shoes_id = #{shoesId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="net.hncu.onlineShoes.domain.Shoes">
    update shoes
    set user_id = #{userId,jdbcType=INTEGER},
      brand_id = #{brandId,jdbcType=INTEGER},
      img_uuid = #{imgUuid,jdbcType=VARCHAR},
      img_suffix = #{imgSuffix,jdbcType=VARCHAR},
      online_time = #{onlineTime,jdbcType=VARCHAR},
      in_price = #{inPrice,jdbcType=DECIMAL},
      out_price = #{outPrice,jdbcType=DECIMAL},
      ratio = #{ratio,jdbcType=DECIMAL},
      stock_out = #{stockOut,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR}
    where shoes_id = #{shoesId,jdbcType=INTEGER}
  </update>
</mapper>